[{"path":"https://r-tmap.github.io/tmaptools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Tennekes. Author, maintainer.","code":""},{"path":"https://r-tmap.github.io/tmaptools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tennekes M (2025). tmaptools: Thematic Map Tools. R package version 3.2, https://github.com/r-tmap/tmaptools.","code":"@Manual{,   title = {tmaptools: Thematic Map Tools},   author = {Martijn Tennekes},   year = {2025},   note = {R package version 3.2},   url = {https://github.com/r-tmap/tmaptools}, }"},{"path":"https://r-tmap.github.io/tmaptools/index.html","id":"tmaptools-tools-for-thematic-maps-in-r","dir":"","previous_headings":"","what":"Thematic Map Tools","title":"Thematic Map Tools","text":"package offers set handy tool functions reading processing spatial data. aim functions supply workflow create thematic maps, e.g. read shape files, set map projections, append data, calculate areas distances, query OpenStreetMap. visualization thematic maps can done tmap package.","code":""},{"path":"https://r-tmap.github.io/tmaptools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Thematic Map Tools","text":"tmaptools available CRAN (version 2.0). development version can installed follows: See installation procedure","code":"library(devtools) install_github(\"r-tmap/tmaptools\")"},{"path":"https://r-tmap.github.io/tmaptools/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Thematic Map Tools","text":"latest development version can installed using devtools.","code":"library(devtools) install_github(\"r-tmap/tmaptools\")"},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate area sizes of the shapes — approx_areas","title":"Approximate area sizes of the shapes — approx_areas","text":"Approximate area sizes polygons real-world area units (sq km sq mi), proportional numbers, normalized numbers. Also, areas can calibrated prespecified area total. function convenient wrapper around st_area.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate area sizes of the shapes — approx_areas","text":"","code":"approx_areas(shp, target = \"metric\", total.area = NULL)"},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_areas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate area sizes of the shapes — approx_areas","text":"shp shape object, .e., sf sp object. target target unit, one \"prop\": Proportional numbers. words, sum area sizes equals one. \"norm\": Normalized numbers. area sizes normalized largest area, area size equals one. \"metric\" (default): Output area sizes either \"km\" (kilometer) \"m\" (meter) depending map scale \"imperial\": Output area sizes either \"mi\" (miles) \"ft\" (feet) depending map scale : Predefined values \"km^2\", \"m^2\", \"mi^2\", \"ft^2\". values can specified well, case required). units output units. See orig coordinate units used shape shp. total.area total area size shp number target units (defined target). Useful total area shp differs reference total area value. \"metric\" \"imperial\" units, please provide total area squared kilometers respectively miles.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_areas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate area sizes of the shapes — approx_areas","text":"Numeric vector area sizes (class units).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_areas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Approximate area sizes of the shapes — approx_areas","text":"Note method determining areas approximation, since depends used projection level detail shape object. Projections equal-area property highly recommended. See https://en.wikipedia.org/wiki/List_of_map_projections equal area world map projections.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_areas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate area sizes of the shapes — approx_areas","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"3.99\") {     data(NLD_muni)      NLD_muni$area <- approx_areas(NLD_muni, total.area = 33893)      tm_shape(NLD_muni) +         tm_bubbles(size=\"area\",                    size.legend = tm_legend(title = expression(\"Area in \" * km^2)))       # function that returns min, max, mean and sum of area values     summary_areas <- function(x) {         list(min_area=min(x),              max_area=max(x),              mean_area=mean(x),              sum_area=sum(x))     }      # area of the polygons     approx_areas(NLD_muni) %>% summary_areas()      # area of the polygons, adjusted corrected for a specified total area size     approx_areas(NLD_muni, total.area=33893) %>% summary_areas()      # proportional area of the polygons     approx_areas(NLD_muni, target = \"prop\") %>% summary_areas()      # area in squared miles     approx_areas(NLD_muni, target = \"mi mi\") %>% summary_areas()      # area of the polygons when unprojected     approx_areas(NLD_muni %>% sf::st_transform(crs = 4326)) %>% summary_areas() } #> Loading required package: tmap #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE #> $min_area #> 7.796249 [km^2] #>  #> $max_area #> 575.2348 [km^2] #>  #> $mean_area #> 101.7129 [km^2] #>  #> $sum_area #> 35090.95 [km^2] #>"},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate distances — approx_distances","title":"Approximate distances — approx_distances","text":"Approximate distances two points across horizontal vertical centerlines bounding box.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate distances — approx_distances","text":"","code":"approx_distances(x, y = NULL, projection = NULL, target = NULL)"},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate distances — approx_distances","text":"x object can coerced bounding box bb, pair coordintes (vector two). former case, distance across horizontal vertical centerlines bounding box approximated. latter case, y also required; distance points x y approximated. y pair coordintes, vector two. required x also pair coordintes. projection projection code, needed case x bounding box x y pairs coordinates. See get_proj4 target target unit, one :  \"m\", \"km\", \"mi\", \"ft\".","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate distances — approx_distances","text":"y specifyed, list two: unit dist. Else, list three: unit, hdist (horizontal distance) vdist (vertical distance).","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/approx_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate distances — approx_distances","text":"","code":"if (FALSE) { # \\dontrun{ if (require(tmap)) {     data(NLD_prov)      # North-South and East-West distances of the Netherlands     approx_distances(NLD_prov)      # Distance between Maastricht and Groningen     p_maastricht <- geocode_OSM(\"Maastricht\")$coords     p_groningen <- geocode_OSM(\"Groningen\")$coords     approx_distances(p_maastricht, p_groningen, projection = 4326, target = \"km\")      # Check distances in several projections     sapply(c(3035, 28992, 4326), function(projection) {         p_maastricht <- geocode_OSM(\"Maastricht\", projection = projection)$coords         p_groningen <- geocode_OSM(\"Groningen\", projection = projection)$coords         approx_distances(p_maastricht, p_groningen, projection = projection)     }) } } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/bb.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounding box generator — bb","title":"Bounding box generator — bb","text":"Swiss army knife bounding boxes. Modify existing bounding box create new bounding box scratch. See details.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounding box generator — bb","text":"","code":"bb(   x = NA,   ext = NULL,   cx = NULL,   cy = NULL,   width = NULL,   height = NULL,   xlim = NULL,   ylim = NULL,   relative = FALSE,   asp.target = NULL,   asp.limit = NULL,   current.projection = NULL,   projection = NULL,   output = c(\"bbox\", \"matrix\", \"extent\") )"},{"path":"https://r-tmap.github.io/tmaptools/reference/bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounding box generator — bb","text":"x One following: shape class sf, stars, sp, raster. bounding box (st_bbox, Extent (raster package, longer supported future versions), numeric vector 4 (default order: xmin, ymin, xmax, ymax), 2x2 matrix). Open Street Map search query. bounding automatically generated querying x Open Street Map Nominatim. See geocode_OSM . ext Extension factor bounding box. 1, bounding box unchanged. Values smaller 1 reduces bounding box, values larger 1 enlarges bounding box. argument shortcut width height relative=TRUE. negative value specified, shortest side bounding box (width height) extended ext, longest side extended absolute value. especially useful bounding boxes low high aspect ratios. cx center x coordinate cy center y coordinate width width bounding box. either absolute relative (depending argument relative). height height bounding box. either absolute relative (depending argument relative). xlim limits x-axis. either absolute relative (depending argument relative). ylim limits y-axis. See xlim. relative boolean determines whether relative values used width, height, xlim ylim absolute. x unspecified, relative set \"FALSE\". asp.target target aspect ratio, width/height, returned bounding box. asp.limit maximum aspect ratio, width/height. Number greater equal 1. landscape bounding boxes, 1/asp.limit used. returned bounding box aspect ratio 1/asp.limit asp.limit. current.projection projection corresponds bounding box specified x. projection projection transform bounding box . output output format bounding box, one : \"bbox\" sf::bbox object, numeric vector 4: xmin, ymin, xmax, ymax. representation used sf package. \"matrix\" 2 2 numeric matrix, rows correspond x y, columns min max. representation used sp package. \"extent\" raster::extent object, numeric vector 4: xmin, xmax, ymin, ymax. representation used raster package.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bounding box generator — bb","text":"bounding box (see argument output)","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/bb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bounding box generator — bb","text":"existing bounding box (defined x) can modified follows: Using extension factor ext. Changing width height width height. argument relavitve determines whether relative absolute values used. Setting x y limits. argument relavitve determines whether relative absolute values used. new bounding box can created scratch follows: Using extension factor ext. Setting center coorinates cx cy, together width height. Setting x y limits xlim ylim","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/bb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bounding box generator — bb","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"2.0\") {      ## load shapes     data(NLD_muni)     data(World)      ## get bounding box (similar to sp's function bbox)     bb(NLD_muni)      ## extent it by factor 1.10     bb(NLD_muni, ext=1.10)      ## convert to longlat     bb(NLD_muni, projection=4326)      ## change existing bounding box     bb(NLD_muni, ext=1.5)     bb(NLD_muni, width=2, relative = TRUE)     bb(NLD_muni, xlim=c(.25, .75), ylim=c(.25, .75), relative = TRUE)  } #>      xmin      ymin      xmax      ymax  #>  79680.25 384942.50 211910.75 541135.50   if (FALSE) { # \\dontrun{ if (require(tmap)) {     bb(\"Limburg\", projection = 28992)     bb_italy <- bb(\"Italy\", projection = \"+proj=eck4\")      tm_shape(World, bbox=bb_italy) + tm_polygons()     # shorter alternative: tm_shape(World, bbox=\"Italy\") + tm_polygons() }} # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/bb_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bounding box to a spatial polygon — bb_poly","title":"Convert bounding box to a spatial polygon — bb_poly","text":"Convert bounding box spatial (sfc) object . Useful plotting (see example). function bb_earth returns spatial polygon 'boundaries' earth, can also done projections (feasible solution exists).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/bb_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bounding box to a spatial polygon — bb_poly","text":"","code":"bb_poly(x, steps = 100, stepsize = NA, projection = NULL)  bb_earth(   projection = NULL,   stepsize = 1,   earth.datum = 4326,   bbx = c(-180, -90, 180, 90),   buffer = 1e-06 )"},{"path":"https://r-tmap.github.io/tmaptools/reference/bb_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bounding box to a spatial polygon — bb_poly","text":"x object can coerced bounding box bb steps number intermediate points along shortest edge bounding box. number intermediate points along longest edge scales aspect ratio. intermediate points needed bounding box plotted another projection. stepsize stepsize terms coordinates (usually meters shape projected degrees longlat coordinates used). specified, overrules steps projection projection coordinates x provided. bb_earth, projection projection bounding box returned (possible). earth.datum Geodetic datum determine earth boundary. default EPSG 4326. bbx boundig box earth vector 4 values: min longitude, max longitude, min latitude, max latitude. default c(-180, 180, -90, 90). projection, feasible solution exist, may wise choose smaller bbx, e.g. c(-180, 180, -88, 88). However, also automatically done next argument, buffer. buffer order determine feasible earth bounding boxes projections, buffer used decrease bounding box small margin (default 1e-06). value subtracted bounding box coordinates. still result feasible bounding box, procedure repeated 5 times, time buffer multiplied 10. Set buffer=0 disable procedure.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/bb_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bounding box to a spatial polygon — bb_poly","text":"sfc object","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/bb_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert bounding box to a spatial polygon — bb_poly","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"2.0\") {     data(NLD_muni)      current.mode <- tmap_mode(\"view\")     qtm(bb_poly(NLD_muni))      # restore mode     tmap_mode(current.mode) } #> ℹ tmap mode set to \"view\". #> ℹ tmap mode set to \"plot\"."},{"path":"https://r-tmap.github.io/tmaptools/reference/calc_densities.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate densities — calc_densities","title":"Calculate densities — calc_densities","text":"Transpose quantitative variables densitiy variables, often needed choroplets. example, colors population density map correspond population density counts rather absolute population numbers.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/calc_densities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate densities — calc_densities","text":"","code":"calc_densities(   shp,   var,   target = \"metric\",   total.area = NULL,   suffix = NA,   drop = TRUE )"},{"path":"https://r-tmap.github.io/tmaptools/reference/calc_densities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate densities — calc_densities","text":"shp shape object, .e., sf object. var name(s) qualtity variable name contained shp data target target unit, see approx_areas. Density values calculated var/target^2. total.area total area size shp number target units (defined unit), approx_areas. suffix character appended variable names. resulting names used column names returned data.frame. default, _sq_<target>, target corresponds target unit, e.g. _sq_km drop boolean determines whether one-column data-frame returned vector","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/calc_densities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate densities — calc_densities","text":"Vector data.frame (depending whether length(var)==1 density values.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/calc_densities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate densities — calc_densities","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"3.99\") { data(NLD_muni)  NLD_muni_pop_per_km2 <- calc_densities(NLD_muni,   target = \"km km\", var = c(\"population\", \"dwelling_total\")) NLD_muni <- sf::st_sf(data.frame(NLD_muni, NLD_muni_pop_per_km2))  tm_shape(NLD_muni) +   tm_polygons(     fill = c(\"population_km.2\", \"dwelling_total_km.2\"),     fill.legend =       list(         tm_legend(expression(\"Population per \" * km^2)),         tm_legend(expression(\"Dwellings per \" * km^2)))) + tm_facets(free.scales = TRUE) +   tm_layout(panel.show = FALSE) } #> tm_facets(): the argument free.scales is deprecated. Specify this via the layer functions (e.g. fill.free in tm_polygons)"},{"path":"https://r-tmap.github.io/tmaptools/reference/crop_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop shape object — crop_shape","title":"Crop shape object — crop_shape","text":"Crop shape object (class sf, stars, sp, raster). shape file x cropped, either bounding box another shape y, y SpatialPolygons object polygon = TRUE.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/crop_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop shape object — crop_shape","text":"","code":"crop_shape(x, y, polygon = FALSE, ...)"},{"path":"https://r-tmap.github.io/tmaptools/reference/crop_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop shape object — crop_shape","text":"x shape object, .e. object class sf, stars, sp, raster. y bounding box, st_bbox,  extent (raster package), shape object bounding box extracted (unless polygon TRUE x sf object). polygon x cropped polygon defined y? FALSE (default), x cropped bounding box x. Polygon cropping works x spatial object y SpatialPolygons object. ... used anymore","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/crop_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop shape object — crop_shape","text":"cropped shape, class x","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/crop_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Crop shape object — crop_shape","text":"function similar crop raster package. main difference crop_shape also allows crop using polygon instead rectangle.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/crop_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop shape object — crop_shape","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"3.99\") {     data(World, NLD_muni, land, metro)      #land_NLD <- crop_shape(land, NLD_muni)      #qtm(land_NLD, raster=\"trees\", style=\"natural\")      metro_Europe <- crop_shape(metro, World[World$continent == \"Europe\", ], polygon = TRUE)      qtm(World) +     tm_shape(metro_Europe) +       tm_bubbles(\"pop2010\",                  col=\"red\",                  size.legend = tm_legend(\"European cities\")) +       tm_legend(frame=TRUE) } #>  #> ── tmap v3 code detected ─────────────────────────────────────────────────────── #> [v3->v4] `tm_legend()`: use 'tm_legend()' inside a layer function, e.g. #> 'tm_polygons(..., fill.legend = tm_legend())' #> This message is displayed once every 8 hours. #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session."},{"path":"https://r-tmap.github.io/tmaptools/reference/deprecated_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated tmaptools functions — deprecated_functions","title":"Deprecated tmaptools functions — deprecated_functions","text":"following functions used anymore deprecated tmaptools version 3.0. functions based sp package supported anymore. migrated https://github.com/mtennekes/oldtmaptools","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/deprecated_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated tmaptools functions — deprecated_functions","text":"","code":"get_proj4(x, output = c(\"crs\", \"character\", \"epsg\", \"CRS\"))  set_projection(   shp,   projection = NA,   current.projection = NA,   overwrite.current.projection = FALSE )  get_projection(   shp,   guess.longlat = FALSE,   output = c(\"character\", \"crs\", \"epsg\", \"CRS\") )  is_projected(x)"},{"path":"https://r-tmap.github.io/tmaptools/reference/deprecated_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated tmaptools functions — deprecated_functions","text":"x see documentation tmaptools 2.x details output see documentation tmaptools 2.x details shp see documentation tmaptools 2.x details projection see documentation tmaptools 2.x details current.projection see documentation tmaptools 2.x details overwrite.current.projection see documentation tmaptools 2.x details guess.longlat see documentation tmaptools 2.x details Deprecated version 2.0 append_data, aggregate_map, double_line, points_to_raster, poly_to_raster, sample_dots, sbind, smooth_map, smooth_raster_cover, read_shape, write_shape. functions based sp package supported anymore. migrated https://github.com/mtennekes/oldtmaptools osm_poly, osm_line, osm_point. Please use package osmdata Deprecated version 3.0 get_proj4: projections, please use function st_crs set_projection setting map projections, use st_crs st_transform get_projection getting map projections, use st_crs is_projected checking projections long lat coordinates, use st_is_longlat","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/geocode_OSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocodes a location using OpenStreetMap Nominatim — geocode_OSM","title":"Geocodes a location using OpenStreetMap Nominatim — geocode_OSM","text":"Geocodes location (based search query) coordinates bounding box. Similar geocode ggmap package. uses OpenStreetMap Nominatim. processing large amount queries, please read usage policy (https://operations.osmfoundation.org/policies/nominatim/).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/geocode_OSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocodes a location using OpenStreetMap Nominatim — geocode_OSM","text":"","code":"geocode_OSM(   q,   projection = NULL,   return.first.only = TRUE,   keep.unfound = FALSE,   details = FALSE,   as.data.frame = NA,   as.sf = FALSE,   geometry = c(\"point\", \"bbox\"),   server = \"https://nominatim.openstreetmap.org\" )"},{"path":"https://r-tmap.github.io/tmaptools/reference/geocode_OSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocodes a location using OpenStreetMap Nominatim — geocode_OSM","text":"q character (vector) specifies search query. instance \"India\" \"CBS Weg 11, Heerlen, Netherlands\". projection projection coordinates bounding box returned. See st_crs details. default latitude longitude coordinates (EPSG 4326). return.first.return first result keep.unfound Keep list items / data.frame rows NAs unfound search terms. default FALSE details provide output details, point coordinates bounding box .data.frame Return output data.frame. FALSE, list returned least two items: \"coords\", vector containing coordinates, \"bbox\", corresponding bounding box. default false, unless q contains multiple queries. .sf = TRUE (see ), .data.frame set TRUE. .sf Return output sf object. TRUE, return.first.set TRUE. Two geometry columns added: bbox point. argument geometry determines set default geometry. geometry .sf, argument determines column (bbox point) set geometry column. Note geometry can changed afterwards st_set_geometry. server OpenStreetMap Nominatim server name. also local OSM Nominatim server.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/geocode_OSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocodes a location using OpenStreetMap Nominatim — geocode_OSM","text":".sf sf object returned. Else, .data.frame, data.frame returned, else list.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/geocode_OSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocodes a location using OpenStreetMap Nominatim — geocode_OSM","text":"","code":"if (FALSE) { # \\dontrun{ if (require(tmap)) {     geocode_OSM(\"India\")     geocode_OSM(\"CBS Weg 1, Heerlen\")     geocode_OSM(\"CBS Weg 1, Heerlen\", projection = 28992)      data(metro)      # sample 5 cities from the metro dataset     five_cities <- metro[sample(length(metro), 5), ]      # obtain geocode locations from their long names     five_cities_geocode <- geocode_OSM(five_cities$name_long, as.sf = TRUE)      # change to interactive mode     current.mode <- tmap_mode(\"view\")      # plot metro coordinates in red and geocode coordinates in blue     # zoom in to see the differences     tm_shape(five_cities) +       tm_dots(col = \"blue\") +     tm_shape(five_cities_geocode) +       tm_dots(col = \"red\")      # restore current mode     tmap_mode(current.mode) } } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/get_asp_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Get aspect ratio — get_asp_ratio","title":"Get aspect ratio — get_asp_ratio","text":"Get aspect ratio shape object, tmap object, bounding box","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_asp_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get aspect ratio — get_asp_ratio","text":"","code":"get_asp_ratio(x, is.projected = NA, width = 700, height = 700, res = 100)"},{"path":"https://r-tmap.github.io/tmaptools/reference/get_asp_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get aspect ratio — get_asp_ratio","text":"x shape class sf, stars, sp, Raster, bounding box (can coerced bb), tmap object. .projected Logical determined wether coordinates x projected (TRUE) longitude latitude coordinates (FALSE). deafult, determined coordinates x. width See details; applicable x tmap object. height See details; applicable x tmap object. res See details; applicable x tmap object.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_asp_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get aspect ratio — get_asp_ratio","text":"aspect ratio","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_asp_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get aspect ratio — get_asp_ratio","text":"arguments width, height, res passed png. x tmap object, temporarily png image created calculate aspect ratio tmap object. default size image 700 700 pixels 100 dpi.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_asp_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get aspect ratio — get_asp_ratio","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"2.0\") {     data(World)      get_asp_ratio(World)      get_asp_ratio(bb(World))      tm <- qtm(World)     get_asp_ratio(tm) } #> [1] 2.070008  if (FALSE) { # \\dontrun{     get_asp_ratio(\"Germany\") #note: bb(\"Germany\") uses geocode_OSM(\"Germany\") } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/get_brewer_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","title":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","text":"Get plot (modified) palette Color Brewer. function deprecated. Please use c4a instead.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_brewer_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","text":"","code":"get_brewer_pal(palette, n = 5, contrast = NA, stretch = TRUE, plot = TRUE)"},{"path":"https://r-tmap.github.io/tmaptools/reference/get_brewer_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","text":"palette name color brewer palette. Run palette_explorer see brewer.pal options. n number colors contrast vector two numbers 0 1 defines contrast range palette. Applicable sequential diverging palettes. sequential palettes, 0 stands leftmost color 1 rightmost color. instance, contrast=c(.25, .75), palette ranges 1/4 3/4 available color range. diverging palettes, 0 stands middle color 1 outer colors. one number provided, number set 0. default value depends n. See details. stretch logical determines whether intermediate colors used categorical palette n greater number available colors. plot palette plot, returned? TRUE palette silently returned.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_brewer_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","text":"vector color values. silently returned plot=TRUE.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_brewer_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","text":"default contrast palette depends number colors, n, following way. default contrast maximal, (0, 1), n = 9 sequential palettes n = 11 diverging palettes. default contrast values smaller values n can extracted R magic: sapply(1:9, tmaptools:::default_contrast_seq) sequential palettes sapply(1:11, tmaptools:::default_contrast_div) diverging palettes.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/get_brewer_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and plot a (modified) Color Brewer palette (deprecated) — get_brewer_pal","text":"","code":"get_brewer_pal(\"Blues\") #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"Blues\", contrast=c(.4, .8)) #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"Blues\", contrast=c(0, 1)) #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"Blues\", n=15, contrast=c(0, 1)) #> This function is deprecated; please use cols4all::c4a() instead   get_brewer_pal(\"RdYlGn\") #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"RdYlGn\", n=11) #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"RdYlGn\", n=11, contrast=c(0, .4)) #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"RdYlGn\", n=11, contrast=c(.4, 1)) #> This function is deprecated; please use cols4all::c4a() instead   get_brewer_pal(\"Set2\", n = 12) #> This function is deprecated; please use cols4all::c4a() instead  get_brewer_pal(\"Set2\", n = 12, stretch = FALSE) #> This function is deprecated; please use cols4all::c4a() instead"},{"path":"https://r-tmap.github.io/tmaptools/reference/get_neighbours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get neighbours list from spatial objects — get_neighbours","title":"Get neighbours list from spatial objects — get_neighbours","text":"Get neighbours list spatial objects. output similar function poly2nb spdep package, uses sf instead sp.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_neighbours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get neighbours list from spatial objects — get_neighbours","text":"","code":"get_neighbours(x)"},{"path":"https://r-tmap.github.io/tmaptools/reference/get_neighbours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get neighbours list from spatial objects — get_neighbours","text":"x shape object, .e., sf object SpatialPolygons(DataFrame) (sp package).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/get_neighbours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get neighbours list from spatial objects — get_neighbours","text":"list items correspond features. item vector neighbours.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/map_coloring.html","id":null,"dir":"Reference","previous_headings":"","what":"Map coloring — map_coloring","title":"Map coloring — map_coloring","text":"Color polygons map adjacent polygons different colors","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/map_coloring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map coloring — map_coloring","text":"","code":"map_coloring(   x,   algorithm = \"greedy\",   ncols = NA,   minimize = FALSE,   palette = NULL,   contrast = 1 )"},{"path":"https://r-tmap.github.io/tmaptools/reference/map_coloring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map coloring — map_coloring","text":"x Either shape (.e. sf SpatialPolygons(DataFrame) (sp package) object), adjacency list. algorithm currently, \"greedy\" implemented. ncols number colors. default 8 palette undefined. Else, set length palette minimize logical determines whether algorithm search minimal number colors. FALSE, ncols colors picked random procedure. palette color palette. contrast vector two numbers determine range used sequential diverging palettes (applicable auto.palette.mapping=TRUE). numbers 0 1. first number determines palette begins, second number ends. sequential palettes, 0 means brightest color, 1 darkest color. diverging palettes, 0 means middle color, 1 extremes. one number provided, number interpreted endpoint (0 taken start).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/map_coloring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map coloring — map_coloring","text":"palette defined, vector colors returned, otherwise vector color indices.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/map_coloring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map coloring — map_coloring","text":"","code":"if (require(tmap) && packageVersion(\"tmap\") >= \"3.99\") {     data(World, metro)      World$color <- map_coloring(World, palette=\"Pastel2\")     qtm(World, fill = \"color\")      # map_coloring used indirectly: qtm(World, fill = \"MAP_COLORS\")      data(NLD_prov, NLD_muni)     tm_shape(NLD_prov) +       tm_fill(\"name\",               fill.legend = tm_legend_hide()) +     tm_shape(NLD_muni) +       tm_polygons(\"MAP_COLORS\",                   fill_alpha = .25,                   fill.scale = tm_scale(values = \"brewer.greys\")) +     tm_shape(NLD_prov) +       tm_borders(lwd=2) +       tm_text(\"name\", options = opt_tm_text(shadow = TRUE)) +     tm_title(\"Dutch provinces and\\nmunicipalities\", bg.color=\"white\") } #> This function is deprecated; please use cols4all::c4a() instead"},{"path":"https://r-tmap.github.io/tmaptools/reference/palette_explorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore color palettes (deprecated) — palette_explorer","title":"Explore color palettes (deprecated) — palette_explorer","text":"interactive tool become deprecated maintained anymore. Please use c4a_gui instead.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/palette_explorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore color palettes (deprecated) — palette_explorer","text":"","code":"palette_explorer()  tmap.pal.info"},{"path":"https://r-tmap.github.io/tmaptools/reference/palette_explorer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Explore color palettes (deprecated) — palette_explorer","text":"object class data.frame 40 rows 4 columns.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/palette_explorer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Explore color palettes (deprecated) — palette_explorer","text":"palette_explorer() starts interactive tool shows Color Brewer viridis palettes, number colors can adjusted well constrast range. Categorical (qualitative) palettes can stretched number colors exceeds number palette colors. Output code needed get desired color values generated. Finally, colors can tested color blindness. data.frame tmap.pal.info similar brewer.pal.info, extended color palettes viridis.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/palette_explorer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Explore color palettes (deprecated) — palette_explorer","text":"https://www.color-blindness.com/types--color-blindness/","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/palette_explorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore color palettes (deprecated) — palette_explorer","text":"","code":"if (FALSE) { # \\dontrun{ if (require(shiny) && require(shinyjs)) {     palette_explorer() } } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"pipe operator magrittr, %>%, can also used functions tmaptools.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs Left-hand side rhs Right-hand side","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_GPX.html","id":null,"dir":"Reference","previous_headings":"","what":"Read GPX file — read_GPX","title":"Read GPX file — read_GPX","text":"Read GPX file. default, reads possible GPX layers, returns shapes layers features.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_GPX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read GPX file — read_GPX","text":"","code":"read_GPX(   file,   layers = c(\"waypoints\", \"routes\", \"tracks\", \"route_points\", \"track_points\"),   remove.empty.layers = TRUE,   as.sf = TRUE )"},{"path":"https://r-tmap.github.io/tmaptools/reference/read_GPX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read GPX file — read_GPX","text":"file GPX filename (including directory) layers vector GPX layers. Possible options \"waypoints\", \"tracks\", \"routes\", \"track_points\", \"route_points\". dedault, layers read. remove.empty.layers empty layers (.e. 0 features) removed list? .sf used anymore","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_GPX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read GPX file — read_GPX","text":"list sf objects, one layer","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_GPX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read GPX file — read_GPX","text":"Note function returns sf objects, still uses methods sp rgdal internally.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_osm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Open Street Map data — read_osm","title":"Read Open Street Map data — read_osm","text":"Read Open Street Map data. OSM tiles read returned spatial raster. Vectorized OSM data supported anymore (see details).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_osm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Open Street Map data — read_osm","text":"","code":"read_osm(   x,   zoom = NULL,   type = \"osm\",   minNumTiles = NULL,   mergeTiles = NULL,   use.colortable = FALSE,   ... )"},{"path":"https://r-tmap.github.io/tmaptools/reference/read_osm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Open Street Map data — read_osm","text":"x object can coerced bounding box bb (e.g. existing bounding box shape). first case, arguments can passed bb (see ...). existing bounding box specified projected coordinates, plesae specify current.projection. zoom passed openmap. applicable raster=TRUE. type tile provider, default \"osm\", corresponds OpenStreetMap Mapnik. See openmap options. applicable raster=TRUE. minNumTiles passed openmap applicable raster=TRUE. mergeTiles passed openmap applicable raster=TRUE. use.colortable colors returned raster object stored colortable? FALSE, RasterStack returned three layers correspond red, green blue values betweeen 0 255. ... arguments passed bb.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_osm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Open Street Map data — read_osm","text":"output read_osm raster object.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_osm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Open Street Map data — read_osm","text":"version 2.0, read_osm used read vectorized OSM data anymore. reason package used hood, osmar, limitations actively maintained anymore. Therefore, recommend package osmdata. Since package user-friendly, reason use read_osm wrapper reading vectorized OSM data.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/read_osm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Open Street Map data — read_osm","text":"","code":"if (FALSE) { # \\dontrun{ if (require(tmap)) {     #### Choropleth with OSM background      # load Netherlands shape     data(NLD_muni)      # read OSM raster data     osm_NLD <- read_osm(NLD_muni, ext=1.1)      # plot with regular tmap functions     tm_shape(osm_NLD) +       tm_rgb() +     tm_shape(NLD_muni) +       tm_polygons(\"population\", convert2density=TRUE, style=\"kmeans\", alpha=.7, palette=\"Purples\")      #### A close look at the building of Statistics Netherlands in Heerlen      # create a bounding box around the CBS (Statistics Netherlands) building     CBS_bb <- bb(\"CBS Weg 11, Heerlen\", width=.003, height=.002)      # read Microsoft Bing satellite and OpenCycleMap OSM layers     CBS_osm1 <- read_osm(CBS_bb, type=\"bing\")     CBS_osm2 <- read_osm(CBS_bb, type=\"opencyclemap\")      # plot OSM raster data     qtm(CBS_osm1)     qtm(CBS_osm2)  } } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/rev_geocode_OSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse geocodes a location using OpenStreetMap Nominatim — rev_geocode_OSM","title":"Reverse geocodes a location using OpenStreetMap Nominatim — rev_geocode_OSM","text":"Reverse geocodes location (based spatial coordinates) address. uses OpenStreetMap Nominatim. processing large amount queries, please read usage policy (https://operations.osmfoundation.org/policies/nominatim/).","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/rev_geocode_OSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse geocodes a location using OpenStreetMap Nominatim — rev_geocode_OSM","text":"","code":"rev_geocode_OSM(   x,   y = NULL,   zoom = NULL,   projection = 4326,   as.data.frame = NA,   server = \"https://nominatim.openstreetmap.org\",   params = NULL )"},{"path":"https://r-tmap.github.io/tmaptools/reference/rev_geocode_OSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse geocodes a location using OpenStreetMap Nominatim — rev_geocode_OSM","text":"x x coordinate(s), spatial points object (sf SpatialPoints) y y coordinate(s) zoom zoom level projection projection coordinates x y provided. .data.frame return data.frame (TRUE) list (FALSE). default list, unless multiple coordinates provided. server OpenStreetMap Nominatim server name. also local OSM Nominatim server. params Additional parameters pass server.  (must start &), ex: \"&accept-language=en\" return english rather local language results.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/rev_geocode_OSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse geocodes a location using OpenStreetMap Nominatim — rev_geocode_OSM","text":"data frame list attributes contained search result","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/rev_geocode_OSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse geocodes a location using OpenStreetMap Nominatim — rev_geocode_OSM","text":"","code":"if (FALSE) { # \\dontrun{ if (require(tmap)) {     data(metro)      # sample five cities from metro dataset     set.seed(1234)     five_cities <- metro[sample(length(metro), 5), ]      # obtain reverse geocode address information     addresses <- rev_geocode_OSM(five_cities, zoom = 6)     five_cities <- sf::st_sf(data.frame(five_cities, addresses))      # change to interactive mode     current.mode <- tmap_mode(\"view\")     tm_shape(five_cities) +       tm_markers(text=\"name\")      # restore current mode     tmap_mode(current.mode) } } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/simplify_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify shape — simplify_shape","title":"Simplify shape — simplify_shape","text":"Simplify shape consisting polygons lines. can useful shapes detailed visualization, especially along natural borders coastlines rivers. number coordinates reduced.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/simplify_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify shape — simplify_shape","text":"","code":"simplify_shape(shp, fact = 0.1, keep.units = FALSE, keep.subunits = FALSE, ...)"},{"path":"https://r-tmap.github.io/tmaptools/reference/simplify_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify shape — simplify_shape","text":"shp sf sfc  object. fact simplification factor, number 0 1 (default 0.1) keep.units prevent small polygon features disappearing high simplification (default FALSE) keep.subunits multipart polygons converted singlepart polygons? prevents small shapes disappearing simplification keep.units = TRUE. Default FALSE ... arguments passed underlying function ms_simplify (except arguments input, keep, keep_shapes explode)","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/simplify_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify shape — simplify_shape","text":"sf object","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/simplify_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simplify shape — simplify_shape","text":"function wrapper ms_simplify. addition, data preserved. Also sf objects supported.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/simplify_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify shape — simplify_shape","text":"","code":"if (FALSE) { # \\dontrun{ if (require(tmap)) {     data(World)      # show different simplification factors     tm1 <- qtm(World %>% simplify_shape(fact = 0.05), title=\"Simplify 0.05\")     tm2 <- qtm(World %>% simplify_shape(fact = 0.1), title=\"Simplify 0.1\")     tm3 <- qtm(World %>% simplify_shape(fact = 0.2), title=\"Simplify 0.2\")     tm4 <- qtm(World %>% simplify_shape(fact = 0.5), title=\"Simplify 0.5\")     tmap_arrange(tm1, tm2, tm3, tm4)      # show different options for keeping smaller (sub)units     tm5 <- qtm(World %>% simplify_shape(keep.units = TRUE, keep.subunits = TRUE),         title=\"Keep units and subunits\")     tm6 <- qtm(World %>% simplify_shape(keep.units = TRUE, keep.subunits = FALSE),         title=\"Keep units, ignore small subunits\")     tm7 <- qtm(World %>% simplify_shape(keep.units = FALSE),         title=\"Ignore small units and subunits\")     tmap_arrange(tm5, tm6, tm7) } } # }"},{"path":"https://r-tmap.github.io/tmaptools/reference/tmaptools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Thematic Map Tools — tmaptools-package","title":"Thematic Map Tools — tmaptools-package","text":"package offers set handy tool functions reading processing spatial data. aim functions supply workflow create thematic maps, e.g. read shape files, set map projections, append data, calculate areas distances, query OpenStreetMap. visualization thematic maps can done tmap package.","code":""},{"path":"https://r-tmap.github.io/tmaptools/reference/tmaptools-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Thematic Map Tools — tmaptools-package","text":"page provides brief overview package functions.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://r-tmap.github.io/tmaptools/reference/tmaptools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Thematic Map Tools — tmaptools-package","text":"Maintainer: Martijn Tennekes mtennekes@gmail.com","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-32","dir":"Changelog","previous_headings":"","what":"version 3.2","title":"version 3.2","text":"CRAN release: 2025-01-13 examples updated tmap4 deprecated functions","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-31-1","dir":"Changelog","previous_headings":"","what":"version 3.1-1","title":"version 3.1-1","text":"CRAN release: 2021-01-19 fixed minor bugs (see github)","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-31","dir":"Changelog","previous_headings":"","what":"version 3.1","title":"version 3.1","text":"CRAN release: 2020-07-01 bb takes asp.limit argument controls maximum aspect ratio improved geocode_OSM results found; also added argument keep.unfound simplify_shape now works sfc objects sf objects geometry column","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-30","dir":"Changelog","previous_headings":"","what":"version 3.0","title":"version 3.0","text":"CRAN release: 2020-03-30 stars support removed hardcoded proj4 shortcuts geocode_OSM also returns bounding box .sf=TRUE","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-20-2","dir":"Changelog","previous_headings":"","what":"version 2.0-2","title":"version 2.0-2","text":"CRAN release: 2019-07-18 sp-based functions marked deprecated fixed bug rev_geocode_OSM fixed bug poly_to_raster","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-20-1","dir":"Changelog","previous_headings":"","what":"version 2.0-1","title":"version 2.0-1","text":"CRAN release: 2018-08-07 fixed bug poly_to_raster fixed smooth_map bugs related sp/sf conversions fixed bug rev_geocode_OSM","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-20","dir":"Changelog","previous_headings":"","what":"version 2.0","title":"version 2.0","text":"CRAN release: 2018-07-14 tmaptools migrated sp sf, functions support sf, still rely sp bb now returns vector instead matrix, similar sf::st_bbox palette_explorer expanded viridis palettes read_osm doens’t support vector OSM data anymore, since osmdata package better alternative","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-12-2","dir":"Changelog","previous_headings":"","what":"version 1.2-2","title":"version 1.2-2","text":"CRAN release: 2017-11-24 improved smooth_map","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-12-1","dir":"Changelog","previous_headings":"","what":"version 1.2-1","title":"version 1.2-1","text":"CRAN release: 2017-05-11 added threshold argument smooth_map fixed bug approx_areas (warnings now ignored show.warnings=FALSE) fixed bug simplify_shape (ms_simplify case sensitive)","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-12","dir":"Changelog","previous_headings":"","what":"version 1.2","title":"version 1.2","text":"CRAN release: 2017-01-29 added palette_explorer","code":""},{"path":"https://r-tmap.github.io/tmaptools/news/index.html","id":"version-10","dir":"Changelog","previous_headings":"","what":"version 1.0","title":"version 1.0","text":"CRAN release: 2017-01-03 first CRAN release package split tmap non-plotting functions tmap 1.6-1 contained tmaptools added aggregate_map added simplify_shape added approx_distances, improved approx_areas, added projection_units added get_brewer_pal, get modify brewer palettes added bb_sp, convert bounding box SpatialPolygons object sf (simple features) objects supported","code":""}]
